
pipeline {

    agent none
    
    stages{
        stage("build"){
            agent {
		docker{
			image 'python:2.7-alpine'
			args '--user root'
		} 
	    }
            when{
             changeset "**/vote/**"
            }
            steps{
                echo 'Compiling vote app'
                    dir('vote'){
                        sh 'pip install -r requirements.txt'
                    }
            }
        }
	stage("test"){
	      agent {
		docker{
			image 'python:2.7-alpine'
			args '--user root'
		} 
	      }
              when{
                changeset "**/vote/**"
               }
               steps{
                   echo 'Running Unit Tets on vote app'
                dir('vote'){
                        sh 'pip install -r requirements.txt'
                        sh 'nosetests -v'
                }
            }
        }
	stage("docker build"){
	      agent any
              when{
		branch 'master'
               }
               steps{
			script {
				docker.withRegistry("https://index.docker.io/v1/", 'dockerlogin') {
				def voteImage =  docker.build("lauroffecapgemini/vote:v${env.BUILD_ID}", "./vote")
				voteImage.push()
				voteImage.push("${env.BRANCH_NAME}")
				}
			}
                }
            }
        }
    post{
        always{
            echo 'Building multibranch pipeline for vote is completed..'
        }
    }
}
